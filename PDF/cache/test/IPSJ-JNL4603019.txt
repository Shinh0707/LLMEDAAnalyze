Vol. 46 No. 3 情報処理学会論文誌 Mar. 2005
# **INSPIRATION** 演奏システム の改良 **—— SMF** データのインポート機能と音高置換処理の検討
#### 谷 井 章 夫 [†][,][††] 片 寄 晴 弘 [††][,][†††]

我々は，ユーザの入力演奏をスケールノートやコードノートヘ置換することにより，スケールや和
声が逸脱した演奏を音楽的に許容できる演奏に実時間で変換する演奏支援システム INSPIRATION
の開発を進めてきた．本稿では，「アボイドノートやクロマティックノートを意図的に用いるための機
構」と「音高置換処理に利用する PuriFi （ Purificatory File ）を SMF （ Standard Midi File ）楽曲
データから自動作成する機構」を中心に述べる．我々は，アボイドノートやクロマティックノートを意
図的に用いるためのインタフェースとして，評価実験においてほとんどの被験者が支持した「黒鍵へ
の打鍵を利用したインタフェース」と「ペダル操作を利用したインタフェース」を採用した． PuriFi
を自動作成するには，調性とコード構成音を認識する必要がある． Spiral Array の考え方を基本とし
た提案手法により， 92% の調性認識率と 85% のコード構成音認識率が得られた． PuriFi の自動作成
機構により，インターネット上で普及している多くの SMF 楽曲データを利用できるようになった．
## **Improvement of a Performance System “INSPIRATION”** **—— Consideration of SMF Import Framework** **and Note Change Function**
### Akio Yatsui [†][,][††] and Haruhiro Katayose [††][,][†††]

We have developed a piano performance system called INSPIRATION which receives rough
keyboard input and translating it into musically correct performance in real time. This system
transforms notes input by a user into scale notes or chord notes. In this paper, we focus on
mechanisms for using avoid-notes or chromatic-notes intentionally and a framework for data
conversion of SMF (Standard Midi File) into PuriFi (Purificatory File: for user’s performance
translation). We adopted two interfaces: “Touching the black claviers in case of avoid-notes
or chromatic-notes,”and “Using pedal in case of avoid-notes or chromatic-notes,”which most
subjects preferred in our experiment. Recognition of chords and key boundaries are crucial for
automatic generation of PuriFi. The proposed algorithm expanding Spiral Array exhibited
recognition accuracy of 92% for key boundaries, and 85% for chord progression, respectively.
Automatic generation of PuriFi enables us to use lots of SMF music data widely available on
the internet.

#### 1. はじめに

音楽演奏の楽しさとしては， 1 ）楽器演奏による自

己表現， 2 ）演奏技能習得の達成， 3 ）合奏におけるイ

ンタラクションなどがあげられる．このうち，楽器演

奏によって自己表現を行うには，音楽知識と演奏技能

を前もって習得しておく必要がある．昨今の集団的音

*†* 関西学院大学理学研究科

Graduate School of Science, Kwansei Gakuin Univer
sity

*††* 科学技術振興機構さきがけ研究 21

PRESTO, JST

*†††* 関西学院大学理工学部

School of Science and Technology, Kwansei Gakuin

University


楽教育では知識や技術の教育に重心が置かれており，

自己表現の可能性が必ずしも追及されていなかった．

音楽知識と演奏技能を習得していない生徒にとっては，

音楽的な表現を試行することへの後ろめたさにもつな

がってきた [1)] ．近年，これらの事項に注目し，計算機

を用いて音楽知識や演奏技能を補う演奏支援システム

の開発が行われている．演奏支援システムは，楽器演

奏に対する敷居を低くする役割がある．

我々は，鍵盤楽器における即興演奏 [☆] を対象とした

演奏支援システム INSPIRATION の開発を進めてき

た．即興演奏を行うには，様々な音楽理論の理解と高

度な演奏技能が要求されるため，ピアノ演奏非経験者

☆ 創作と演奏を同時に行う演奏行為．


849


-----

850 情報処理学会論文誌 Mar. 2005

はもとより，既存楽曲の再現しか経験のないピアノ演

奏者にとっても非常に困難な演奏行為である． INSPI
RATION は，スケールや和声が逸脱した演奏を音楽

的に許容できる演奏に実時間で変換するため，楽器演

奏が苦手なユーザでも気軽に演奏表現を楽しむことが

できる．具体的には，ユーザの表現する演奏意図を，

打鍵タイミング，音の強弱，音の高低，同時に入力する

音数などの物理的な量としてとらえ，それらをできる

限り保持した状態で，スケールノート [☆] やコードノー

トヘ置換することにより音楽知識と演奏技能を補う．

INSPIRATION は，ピアノ即興演奏非経験者 [☆☆] を対

象として開発を進めている．楽器演奏経験のない素人

でも扱えるシステムを初期システムとして開発し，先

の速報 [2)] において，演奏変換処理の概要について報告

した．その後，システムの実用化に向け，これまでの


INSPIRATION の問題点を検討したうえで，同時に

利用者へのアンケートを実施した結果，楽曲データ数

の少なさと過剰な演奏補正が課題として浮かび上がっ

た．本稿では，これらの課題への対応に焦点を当てる．

以下， 2 章では，計算機による音楽知識・技能の補完，

3 章では，インタフェース向上にむけての課題， 4 章

では，意図的に音を外すためのインタフェース， 5 章

では，一般に流通している SMF 楽曲を利用するため

の機構について述べ， 6 章でまとめる．
#### 2. これまでの INSPIRATION の研究開発 を通じて

**2.1** 計算機による音楽知識・技能の補完

音楽の制作や演奏によって自己の意図を表現するた

めには，前もって音楽知識・技能を身につけておく必

要がある．何らかの理由でこれらの習得が不十分な場

合，計算機によってその部分を補完することにより，

表現の範囲を拡張することが可能となる．演奏支援シ

ステムの中で音楽知識・技能を補完するシステムとし

ては以下のようなものがある．「 Coloring-in Piano [3)] 」

は，楽曲の音高情報を計算機に事前に入力しておくこ

とで，打鍵位置にかかわらず正しい音高を出力するシ

ステムである．「 sfp [4)] 」は，指揮的な演奏表現により

テンポや音量などを操作するシステムである．「音機

能固定楽器 [5)] 」は，従来の鍵盤楽器の音高配置を音の

機能を固定した配置に並べ替えた楽器である．ユーザ

は，演奏したい音の機能を鍵盤上から瞬時に選択でき

る．「カシオトーン」は，スケールノートへの自動変換

☆ スケールを構成する音高．
☆☆ 楽器演奏経験のないまったくの素人，ギターなどの楽器演奏経
験者，既存楽曲の再現しか経験のないピアノ演奏者も含む．


図 **1** 鍵盤上における音の機能の配置
Fig. 1 Assignment of note functions to keyboards.

により誰でもアドリブ演奏を楽しめる機能を持つ．ま

た，簡単な打鍵操作により，意図した minor chord や

Major 7th chord を演奏できる機能もある．

演奏支援システムをデザインするには次の事項を考

慮する必要がある．

*•* 演奏意図をどのようにとらえるか．

*•* どのような音楽知識・技能を補完するか．

*•* どのようなインタフェースにより実現するか．

たとえば，鍵盤楽器を対象とした演奏支援システム

の場合，システムで採用する演奏方法が，鍵盤楽器本

来の演奏方法と著しく異なると，周囲の観衆に対して

不自然に映るほか，演奏にも違和感を与えるため，ユー

ザのモチベーションの低下につながる可能性がある．

本研究では，これらの事項に十分考慮し，ピアノ即興

演奏を対象とした演奏支援システム INSPIRATION

の開発に取り組んできた．

**2.2** **INSPIRATION** システムの概要

鍵盤上の各音高は，音の持つ効果と使用条件から 4

種類の機能 [☆☆☆] に分類され，その配置は調性やコード

ネームの変化とともに複雑に変化する（図 **1** ）．即興

演奏を行うには，音の機能を理解し，鍵盤上の配置を

事前に暗記しておく必要がある．さらに，意図した機

能を持つ音高を鍵盤上から瞬時に選択できる技能も必

要である．この音楽知識と演奏技能を習得していなけ

☆☆☆ コードノート：ルート音， 3 度音， 5 度音， 7 度音．
テンションノート： 9 度音， 11 度音， 13 度音．
アボイドノート：コードサウンドの構成上，除外される音高．
クロマティックノート：スケールノート以外の音高．


-----

Vol. 46 No. 3 演奏システム INSPIRATION の改良 851

図 **2** システム概要
Fig. 2 System overview of INSPIRATION.

れば，音の強弱や音の高低などの演奏表現を行うこと

ができない．このことが，即興演奏を難しくしている

要因の 1 つである．
INSPIRATION は，ユーザの入力演奏に対して音

高置換処理を施すことにより，音楽理論に基づいた演

奏に実時間で変換する [☆] ．ユーザは，音の機能の配置

を意識する必要がなくなり，音の高低や音の強弱など

の演奏表現に集中できる．

図 **2** にシステムの概要を示す．本システムは， PuriFi

（ Purificatory File ）と SMF （ Standard Midi File ）と

いうデータファイルを使用している． SMF とは， MIDI

形式の音楽データを扱う際の標準的なファイル形式で

あり，楽曲データのエディタやプレーヤの多くが対応


している．本システムで BGM として使用する SMF

には，複数パート（ギター，ベース，ストリングス，

ドラムスなど）の演奏が収録されている．本システム

独自のフォーマットである PuriFi には，音高置換処理

に必要な情報（コードネームの移行時刻（ tick ），各移

☆ 現在のところ，ユーザの演奏入力から変換後の演奏出力までの処
理時間が 44 ms に抑えられており，システムのリアルタイム性
が保持できていると考えている．打鍵から音の出力までに 50 ms
以上の遅延が発生すると，演奏が困難になることがヤマハの西
堀ら [6)] により確認されている．


図 **3** PuriFi 内部データの例

Fig. 3 The example of PuriFi format.

行時刻における調性 [☆☆] ，ベース音，コード構成音 [☆☆☆] ）

が記載されている（図 **3** ）．

ユーザは，「打鍵タイミング，同時に入力する音数，

大まかな音の高低，音高の推移方向，音の強弱」を意

☆☆ 調性が分かれば，スケールノートを特定できる．
☆☆☆ SMF 楽曲データ内において和音演奏を構成する音高群であり，
コードノートとテンションノートが混在している．


-----

852 情報処理学会論文誌 Mar. 2005

/yatsui/inspiration/ から試聴できる． INSPIRATION を利用した演奏状況についても閲覧できる．

**2.3** インタフェース向上にむけての課題

一般に，コードノートやテンションノートによって

構成されたフレーズは，音楽的には自然であるが，緊

張感の乏しいものになる傾向がある．一方，アボイド

ノートやクロマティックノートを経過音として用いる

と，緊張感が生まれる．即興演奏において，コードノー

トとテンションノートのみにより構成されたフレーズ

を演奏することは稀であり，アボイドノートやクロマ

ティックノートを用いて意図的に音を外すことも少な

くない．初期の INSPIRATION は，意図的に音を外

すためのインタフェースを備えていなかった．そこで，

アボイドノートとクロマティックノートに関する音楽

知識と技能を補完する機能を実装し，意図的に音を外


図 **4** INSPIRATION を介した演奏の一例
Fig. 4 The performance transformed by INSPIRATION.

識したうえで，音の機能の配置を無視した大ざっぱな

演奏を入力する．システムは，同時入力音数を感知し，

和音演奏かフレーズ演奏か判断する．フレーズ演奏と

判断された音高は，スケールノートへ置換する．和音

演奏と判断された音高群は，コード構成音へ置換する．

ただし，複数音入力の構成音に C3 [☆] 以下の音高を含

む場合，最も低い音高をベース音へ置換する．音高置

換処理は，ユーザの入力演奏と変換後の演奏の音高推

移方向を一致させたうえで，置換前後の音高差が最小

になるよう音高を置換する．本システムでは，音楽的

制約の違いから以下の 3 つの演奏モードを用意して

いる．

*•* Pops-style mode ：既存のポップス楽曲をベース

に，コードポジションやサブフレーズなどを演奏

するモード．

*•* Blues-style mode ：ブルースの典型的なコード進

行に従って，ブルース風の演奏に変換するモード．

*•* Free-style mode ：自動生成するコード進行をベー

スに，調性からの離脱やルートの半音下降進行な

どを自由に展開するモード．

演奏入力インタフェースには， MIDI キーボードを

想定している．ユーザの入力演奏に対して，本シス

テムにより演奏変換した事例を図 **4** に示す．音高の

みが修正され，打鍵タイミング，音長，同時発音数

が保持されていることが分かる．変換前後の演奏を
http://ist.ksc.kwansei.ac.jp/˜katayose/members

☆ MIDI ノートナンバ 48 ．


すためのインタフェースの開発に取り組んだ．
INSPIRATION をより多くの人に利用してもらう

ためには，その人の好みに合う楽曲データ数を充実さ

せる必要がある．初期の INSPIRATION では，手作

業により PuriFi を作成していたため，楽曲数の拡充

に限界があった． SMF 楽曲データは， MIDI 形式の

音楽データを扱う際の標準的なファイル形式であり，

広く一般に普及している．これに注目し， SMF 楽曲

データから PuriFi を自動作成する機構を実現するこ

とにより，楽曲データ数の不足を本質的に解決できる

と考えた． SMF 楽曲データから PuriFi を作成するに

は，調性やコードに関する音楽知識が必要であり，こ

れを補完する機能を実装する．
INSPIRATION の初期システムでは，楽器演奏経

験のない素人でも気軽に即興演奏を楽しめるシステム

の開発を目指した．学会や展示会 [☆☆] において実施した

ユーザに対するアンケート調査では，この目的は十分

に満たされていることが確認された．一方，要望とし

て，即興演奏の対象曲数を増やしてほしいという意見

が多数寄せられた．そのほかに，音楽経験者からは，

意図的に音を外せるようにしたいとの意見が寄せられ

た．これらの課題は，我々もその必要性を認識してい

たものである．

以下，意図的に音を外すためのインタフェースと

PuriFi の自動作成機構を述べる．
#### 3. 意図的に音を外すためのインタフェース

フレーズ演奏において意図的に音を外すには，アボ

☆☆ 日本ソフトウェア科学会 WISS2001 8) において約 50 人， ATC
関西学生卒業作品展「創っ展 —TUKUTTEN 」 Vol.6 におい
て約 150 人，学内で約 200 人の被験者からコメントを得た．


-----

Vol. 46 No. 3 演奏システム INSPIRATION の改良 853


イドノートとクロマティックノートに該当する鍵盤を

瞬時に判断する必要があり，素人の演奏者には難しい．

本研究では，簡易に音を外すインタフェースとして，
3 種類のインタフェースを開発した．共通の処理とし

て，同時入力音数を感知し，和音演奏かフレーズ演奏

かを判断したうえで，和音演奏と判断された音高群を

コード構成音へ置換する．以下，各インタフェースの

フレーズ演奏変換処理について述べる．
**A** ）鍵盤の視覚的特徴を利用したインタフェース

インタフェース A では，鍵盤の視覚的特徴として鍵

盤の色の違い（白鍵と黒鍵）を利用した．具体的には，

白鍵への打鍵に対しては，コードノートかテンション

ノートへ置換し，黒鍵への打鍵に対しては，アボイド

ノートかクロマティックノートへ置換する．ユーザは，

黒鍵を打鍵することにより，意図的に音を外す [☆] ．音

高の置換は，ユーザの入力演奏と変換後の演奏の音高

推移方向を一致させたうえで，置換前後の音高差が最

小になるよう処理する．
**B** ）ペダル操作を利用したインタフェース

インタフェース B では，ペダルのオン・オフ操作に

より，鍵盤上の音機能配置の切替えを行う．具体的に

は，ペダル・オフ時の打鍵に対しては，コードノート

かテンションノートへ置換し，ペダル・オン時の打鍵

に対しては，アボイドノートかクロマティックノート

へ置換する．ユーザは，ペダルを踏みながら打鍵する

ことにより，意図的に音を外す．音高の置換は，ユー

ザの入力演奏と変換後の演奏の音高推移方向を一致さ

せたうえで，置換前後の音高差が最小になるよう処理

する．

**C** ）音高の使用頻度を考慮したインタフェース

過度の演奏補正は，演奏表現の幅を狭めることにつ

ながる可能性がある．この問題を指摘し，対処を行っ

たものとして，東京理科大学の柳川らによる「即興演

奏における演奏補正システム [7)] 」がある．柳川らのシ

ステムは，旋律のデータベースに基づいて，様々な条

件下でのアボイドノートやクロマティックノートの使

用頻度を算出し，使用頻度の低いアボイドノートやク

ロマティックノートのみを補正することで，表現の幅を

狭めず演奏補正を実現した．この手法をインタフェー

ス C として実装した．処理で用いる特徴ベクトルを

以下に示す．

*•* 対象音の直前の音がアボイドノートやクロマティッ

☆ たとえば，キーが A でコード名が D メジャー 7th の場合に「 E
→ F → F# → G 」という順で単音入力された場合，変換後の演
奏は「 E → F# → G → G# 」となる（図 1 ）．ユーザは，黒鍵
である F# の打鍵により「音を外したい」という意図を示す．


表 **1** 意図的に音を外すためのインタフェースの評価結果

Table 1 Estimation for three interfaces.

|Col1|ピアノ演奏 経験者|楽器演奏 経験者|楽器演奏 非経験者|
|---|---|---|---|
|インタフェース インタフェース インタフェース 必要性アリ 必要性ナシ|6 人 2 人 0 人 8 人 0 人|5 人 2 人 0 人 6 人 1 人|2 人 3 人 0 人 1 人 4 人|



クノートか．

*•* 対象音の発音のタイミングは， 8 分音符レベルで

表か裏か．

*•* 対象音の発音のタイミングは，コードチェンジと

同時か．

*•* 対象音とその直前の音との音高差．

*•* 対象音とその直前の音との間に休符があるか．

音高の置換は，ユーザの入力演奏と変換後の演奏の

音高推移方向を一致させたうえで，置換前後の音高差

が最小になるよう処理する．
**3.1** **3** 種類のインタフェースの評価

前述した意図的に音を外すための 3 種類のインタ

フェースについて，即興演奏経験のない被験者 20 人

に対して，「音を外す」演奏表現が最もしやすかったイ

ンタフェースの選択を求めた．また，音を外す演奏表

現の必要性についても意見を求めた．被験者の詳細は

以下のとおりである．実験結果を表 **1** に示す．

*•* ピアノ演奏経験者 8 人

*•* 楽器演奏経験者（ピアノ非経験者） 7 人

*•* 楽器演奏非経験者 5 人

インタフェース A に対する評価が，全体的に最も高

かった．音を外す演奏表現と素人が持つ黒鍵に対する

イメージが類似している点をうまく利用できていて，

直感的に操作しやすいという意見が得られた．インタ

フェース B に対しては，ペダル本来の機能の印象が

強いため，スイッチとしての使用に違和感を感じると

いう意見があった．しかし，どちらのインタフェース

も，素人の演奏者でも意図的に音を外せる点が評価さ

れた．使いやすさに関しては，結局は慣れ次第ではな

いかという意見もあった．インタフェース C は，鍵盤

位置を特別意識しなくても音を外す演奏表現が可能で

ある．しかし，演奏者が意図的に音を外すにはアボイ

ドノートやクロマティックノートの配置を暗記してお

く必要がある． INSPIRATION は，即興演奏非経験

者を対象としているため，インタフェース C は適当

でない．インタフェース C が参考にした柳川らの手

法は，ある程度の音楽知識と演奏技能を習得したピア

ノ演奏経験者を対象としていると考えられる．インタ


-----

854 情報処理学会論文誌 Mar. 2005

フェース A および B と比較して，インタフェース C

に対する評価が低かったことから，被験者が “ 外れた

音の自然さ ” よりも “ 音を外したいときに外せる ” こ

とを重視していることが分かる．また，我々は，ある

条件下で使用された外れた音を，自然と感じるか不自

然と感じるかを判断することは，本質的に難しいと考

えている．好みの音楽などが要因となって，心地良い

と感じる聴取者もいれば，違和感を覚える聴取者もい

る．このように，聴取者の主観が影響するため，外れ

た音の自然さは万人に共通するものではない．以上の

評価から， INSPIRATION では，意図的に音を外す

ためのインタフェースとして，インタフェース A お

よび B を採用した．

音を外す演奏表現については，ピアノ演奏経験者と

楽器演奏経験者のほとんどが，その必要性を感じてい

ることが確認された．一方，楽器演奏非経験者は，あ

まり必要性を感じておらず，コードノートやテンショ

ンノートへの置換処理で満足していることが分かった．

#### 4. PuriFi の自動作成機構

INSPIRATION は， PuriFi （ Purificatory File ）を

参照して音高置換処理を行っている． PuriFi を自動

作成するためには， SMF 楽曲データから調性とベー

ス音とコード構成音を抽出する必要がある．図 **5** に，
PuriFi の自動作成機構を示す．以下，処理の詳細につ

いて述べる．
**4.1** 調性・転調認識

調性・転調認識の手法としては，調性ごとに各音高

の出現率を設定し，楽曲データ内の各音高の出現率と

の相関から調性を判断する単純な手法が考えられるが，

精緻に行うには事前に大量の楽曲データから調性ごと

の各音高の出現率を求めておく必要がある．そこで本研

究では，座標演算により調性を特定する Elaine Chew

の Spiral Array [9)] を元にした手法を用いる． Spiral

Array は，各音高を 5 度圏の順で 3 次元座標空間内に

配置したものである（図 **6** ）．調性的に重要な音高が密

集しており，各調性ごとに 1 つの座標値に集約できる．

「調性ごとに集約された座標値」と「対象楽曲の音高

群を集約した座標値： center of effect （以下 c.e. ）」の

距離が最小となる調性を対象楽曲の調性として判断す

る． Spiral Array は，次元の異なる音楽的な実体（音

高と調性）を，同じ次元の情報（座標値）として同じ

座標空間内に表現することを可能にした．
Spiral Array は，楽譜データのように，基本とな

る調性が既知なデータを対象としているため， C と
B# や F と E# などをあえて区別している．しかし，


図 **5** PuriFi の自動作成機構

Fig. 5 Extraction of PuriFi from SMF.

図 **6** Spiral Array
Fig. 6 Spiral Array.


-----

Vol. 46 No. 3 演奏システム INSPIRATION の改良 855

SMF 楽曲データのように調性の分からない状況下で

は，これらを区別することができない．その結果，座標

空間内に同一音高を意味する座標値が複数存在してし

まう．そこで，本研究ではこの問題を解決するために，
Spiral Array を改良したデータ表現として Spiral in

Torus を提案する．以下，データ表現 Spiral in Torus

と調性・転調認識手法について述べる（図 **7** ）．

**S** **p** **iral in Torus** のデ ータ表現

**step1** ～ **step3** は， Spiral Array のアイデアを採用

している． **step4** は，上記の問題点を解決するために

拡張した処理である．
**step1** 各音高を示す座標値 *P* ( *k* ) の算出 [☆]

####  

####   =


2
#### k · � 2 /


sin *[kπ]* 2

cos *[kπ]*


2 */* 15


def
*P* ( *k* ) =

####  


*x* *k*

*y* *k*

*z* *k*

####   (1)


**step2** 各コードを示す座標値 *C* の算出

ルート音 *≥* 5 度音 *≥* 3 度音の順で重み付けを行い，

各音高を示す座標値 *P* ( *k* ) から各コードを示す座標値
*C* へ集約する．重み係数については，文献 9) におけ

る設定値を採用した．

*C* *M* ( *k* )=0 *.* 516 *·P* ( *k* )+0 *.* 315 *·P* ( *k* +1)+0 *.* 168 *·P* ( *k* +4) [(2)]

*C* *m* ( *k* )=0 *.* 516 *·P* ( *k* )+0 *.* 315 *·P* ( *k* +1)+0 *.* 168 *·P* ( *k−* 3) [(3)]

*C* = *{C* *M* ( *k* ) for all *k}∪{C* *m* ( *k* ) for all *k}* (4)

**step3** 各調性を示す座標値 *T* の算出

主和音 *≥* 属和音 *≥* 下属和音の順で重み付けを行

い，各コードを示す座標値 *C* から各調性を示す座標

値 *T* へ集約する．重み係数は，文献 9) における設定

値を採用した．

*T* *M* ( *k* )=0 *.* 516 *·C* *M* ( *k* )+0 *.* 315 *·C* *M* ( *k* +1)+0 *.* 168 *·C* *M* ( *k−* 1)
(5)

*T* *m* ( *k* )=0 *.* 516 *·C* *m* ( *k* )+0 *.* 315 *·C* *M* ( *k* +1)+0 *.* 168 *·C* *M* ( *k−* 1)
(6)

*T* = *{T* *M* ( *k* ) for all *k}∪{T* *m* ( *k* ) for all *k}* (7)

**step4** z 成分に対する処理
*P* ( *k* ) ， *T* の z 成分のみオクターブで畳み込み， *θ* *z*
として独立させる． z 成分を角度として表すことによ

り， *P* ( *k* ) や *T* を 1 つの座標値に集約できる．

*z*
*θ* *z* = *·* 30 *[◦]* (8)
#### � 2 / 15

☆ k は， Spiral Array 上の各ノートに便宜的に振られた番号を
示す．たとえば，図 7 の場合， z = 0 である F を k = 0 と
すると， B ♭は k = *−* 1 ， C は k = 1 ， G は k = 2 ， D は
k = 3 *· · ·* となる．


**S** **p** **iral in Torus** による調性・転調認識

**step1** c.e. の x 成分と y 成分の算出


*w* *i* は，各音高の音長の総和値が全ノートの音長の

総和値に占める割合を示す． *i* = 0 から順に計算し，

*i* = 11 で終了する． c.e. を示す z 成分に対応する角と

して Θ 12 を採用する．

「 *w* 2 = 1 */* 4 ， *w* 3 = 1 */* 4 ， *w* 10 = 1 */* 2 」の場合を例

にあげ，計算過程を以下に示す．

*i* = 0 *→* *w* 0 = 0 より， Θ 1 = Θ 0 = 0

*i* = 1 *→* *w* 1 = 0 より， Θ 2 = Θ 1 = 0

*i* = 2 *→* *w* 2 = 1 */* 4 ， *W* 2 = 1 */* 4 Θ 3 = 0+1 *×* (30 *×* 2 *−* 0) =


*N*
#### � d i (9)

*i* =1


*c* =


*N*
#### �

*i* =1


*d* *i* where *D* =
*D* *[·][ p]* *[i]*


*c* は c.e. を示す座標値， *p* *i* は各音高を示す座標値，
*d* *i* は各音高の音長， N は認識対象区間内のノート数

を示す．
**step2** c.e. の z 成分の算出

#### 

Θ *i* +1 =
#### 


Θ *i* + *W* *[w]* *[i]* *i* *[·]* [ (30] *[ ·][ i][ −]* [Θ] *[i]* [)]

( *w* *i* *̸* =0 かつ 30 *· i−* Θ *i* *≤* 180 *[◦]* のとき )

Θ *i* + *W* *[w]* *[i]* *i* *[·]* [ (30] *[ ·][ i][ −]* [Θ] *[i]* *[ −]* [360)]

( *w* *i* *̸* =0 かつ 30 *· i−* Θ *i* *>* 180 *[◦]* のとき )

Θ *i*
( *w* *i* =0 のとき )


where *W* *i* =


*i*
#### � w k (10)

*k* =0


-----

856 情報処理学会論文誌 Mar. 2005


60

*i* = 3 *→* *w* 3 = 1 */* 4 ， *W* 3 = 1 */* 2 Θ 4 = 60 + 1 */* 2 *×* (30 *×* 3 *−*

60) = 75

*i* = 4 ～ 9 *→* *w* *i* = 0 より， Θ *i* +1 = Θ *i* = 75

*i* = 10 *→* *w* 10 = 1 */* 2 ， *W* 10 = 1 Θ 11 = 75 + 1 */* 2 *×* (30 *×*

10 *−* 75 *−* 360) = 7 *.* 5

*i* = 11 *→* *w* 11 = 0 より， Θ 12 = Θ 11 = 7 *.* 5

よって，この場合， c.e. を示す z 成分に対応する角

は， 7 *.* 5 *[◦]* となる．なお，たとえば， *w* 3 は， D が認識

対象区間内に占める割合を示し， *W* 3 は， F ， C ， G ，

D が認識対象区間内に占める割合を示す．
**step3** *T* と c.e. との距離 *I* の算出


*I* =
#### ~~�~~


( *x* *T* *−* *x* *c* ) [2] + ( *y* *T* *−* *y* *c* ) [2] + ( *Z* *I* ) [2] (11)


where *Z* *I* = *[I]* *[θ]*


2 */* 15

#### [I] [θ] �

30 *[·]*


and *I* *θ* = *|T* *θ* *−* Θ 12 *|* (0 *≤* *I* *θ* *≤* 180)

なお， *T* の x 成分を *x* *T* ， y 成分を *y* *T* ， c.e. の x 成分

を *x* *c* ， y 成分を *y* *c* ， *T* の z 成分に対応する角を *T* *θ*
とする．

**step4** c.e. の z 成分の算出
*I* が最小となる調性を調性候補として採用する．

認識対象区間を 4 小節に設定し，それを 16 分音符

分シフトし，以上の処理を繰り返す．得られた調性が

変化した時刻を転調時刻と判断する．

**4.2** ベース音・コード構成音認識

調性音楽理論に基づいた楽曲のコード進行認識手法

として， Winograd の手法 [10)] をはじめとして，数多く

の研究事例がある．現代のポップス楽曲は，一時的転

調を多く含んだ楽曲や，コード進行上の連続するコー

ドの音楽的なつながりを無視した楽曲も少なくない．

このような楽曲に対しては，調性音楽理論に基づい

た従来の手法では解析が困難である．本研究の「ベー

ス・コード構成音認識」の目的は， INSPIRATION の

和音演奏変換に用いる音高群を決定することである．

ユーザの入力演奏に対して変換処理を施した和音演奏

と BGM の伴奏パートの行う和音演奏との整合性を高

める必要がある．そこで本研究では，伴奏パートの和

音演奏の構成音をできる限り正確に抽出することに重

点を置いた以下のようなオリジナルの手法を採用した．
**4.2.1** コード移行時刻の抽出
SMF 楽曲データ 10 曲に対して事前に調査したとこ

ろ，コード移行時刻上で発音される音高群に以下の特

徴がみられた．

*•* ベース音の発音がある．

*•* ドラムスの発音がある．



*•* 同時発音数が多い．

*•* ベロシティ（音の強さ）の総和が大きい．

*•* デュレーション（音の長さ）の総和が大きい．

我々は，これらの特徴をヒューリスティクスとして

利用し，コード移行時刻の抽出を行うことにした．各

項目の特徴量は，小節単位で極端に変化する可能性が

あるため，小節単位で以下の処理を行う．なお，特徴

量の抽出は， 16 分音符間隔で行っている．
**step1** ベース系楽器の発音の有無を調べる．ベー

ス系楽器の発音がない場合は，持続音系楽器と減衰音

系楽器の演奏内容でベース音域の発音の有無を調べる．

存在した時刻をコード移行時刻の候補として絞る．

**step2** ドラムスの発音の有無を調べ，さらに候補

を絞る．ドラムスの発音がない場合は， **step1** で得ら

れた候補を保持する．

**step3** 各候補 *i* ごとに，同時発音数 *α* *i* ，ベロシ

ティ総合値 *β* *i* ，デュレーション総合値 *γ* *i* を求めたう

えで， **H** を求める．


**A** **B** **C**
**H** =
#### � ∥ A ∥ [+] ∥ B ∥ [+] ∥ C ∥

#### �


*/* 3 (12)


ここで， **A** ， **B** ， **C** は， *i* 番目の要素が，それぞれ *α* *i* ，
*β* *i* ， *γ* *i* であるベクトルである． **H** の要素 *h* *i* のうち閾

値 [☆] を上回った要素に対応する地点を，コード移行時

刻として認定する．
**4.2.2** ベース音・コード構成音の抽出

ベース系楽器は，一般的にコード移行時刻において

ルート音（ベース音）を演奏することが多い．そこで，

コード移行時刻上の最低音をルート音（ベース音）と

して採用することにした．

コード構成音の抽出の目的は，コード移行時刻の各

区間内において，コード構成音としてふさわしい音高

を抽出することにある．コード構成音としての確信度

を音高ごとに算出し，確信度の高い音高をコード構成

音として認定する．減衰音系楽器は，コード構成音の

使用回数が他の音高よりも多いため，音高の使用回数

を各音高のコード構成音としての確信度とする．ベー

ス系楽器と持続音系楽器については，コード構成音の

持続時間の総和が他の音高よりも長いため，各音高の

デュレーション総合値が 16 分音符の何倍に相当する

かを算出し，その値をコード構成音としての確信度と

する．なお，和音を構成する音高については，コード

構成音としての可能性が高いため，大きな重みを与え

ている．

☆ 楽曲 10 曲を用いて行った前実験において， 0.2 を閾値として設
定したところ，最もコード変化地点認識率を上げることができ
たため，これをデフォルト値として利用した．


-----

Vol. 46 No. 3 演奏システム INSPIRATION の改良 857

ている． F メジャーと C メジャー間では，「 C ， D ， E ，
F ， G ， A 」のスケールノートが共通している． 3 小節

目のフレーズは， C メジャーと F メジャーの共通のス

ケールノートにより構成されており， INSPIRATION

におけるフレーズ生成においてどちらのスケールノー

トを用いても，特に大きな問題とはならない．なお，

式 (2) ～ (7) の係数の設定値を対象曲の特徴に応じて

決定すれば，認識精度が上がる可能性があり，今後の


図 **8** 認識結果例

Fig. 8 Example of recognition result.

**4.2.3** コード構成音の補充

調性を特定することにより，使用されうるコードを

絞ることができ，和音構成音数の少ない楽曲データに

対してコード構成音を補うことができる．ここでは，

コード構成音の抽出が 2 音以下の場合に限り，コード

構成音の補充を行う．処理の流れを以下に示す．

**step1** 抽出されたルート音（ベース音）と同じ

ルート音（ベース音）を持つコード候補に絞る．
**step2** 抽出されたコード構成音を含むコード候補

を抽出する．
**step3** 決定したコード候補のコード構成音により

補充する．
**4.3** 認識結果

インターネット上で配布されている SMF 形式のポッ

プス楽曲データ 10 曲に対して調性・転調認識とコー

ド構成音の認識率を調査した [☆] ．この結果， 92% の調

性の認識率， 85% のコード構成音の認識率が得られた．

認識率の算出方法を以下に示す．

調性認識率 (%) = ( *α/N* ) *·* 100

コード構成音認識率 (%) = ( *β/N* ) *·* 100

N ：全小節数 *×* 16

*α* ：正解例と調性が一致した地点の総数

*β* ：正解例とコード構成音が一致した地点の総数

なお，正解例としては，音楽経験者複数名が話し合

いのうえ，選定したものを用い， 1 小節につき 16 カ所

で認識結果との照合を行った．調性・転調認識に関し

て正解例と一致しなかったケースとしては，近親調間

の転調時刻の不一致がほとんどであった．コード構成

音認識においては，アルペジオ演奏されたコードノー

トとフレーズの構成音を同等に扱ってしまい，コード

構成音が正解例と一致しないケースがあった．上記の

理由で正解例と一致しなかった認識結果例を図 **8** に示

す．近親調間では，構成するスケールノートが類似し

☆ 認識結果は，クローズドテストである．


課題としたい．また， 3 小節目のコード構成音が正解

例と一致していない．正解例の 3 小節目のコード構成

音は， F メジャーコードのコードノートにより構成さ

れている．認識結果のコード構成音 G は， F メジャー

コードにおける 9th のテンションノートである．この

ように，誤認識についても，システムの不適切な動作

の要因となるものは少なく， INSPIRATION におけ

る和音生成に用いるうえでは，大きな問題にはならな

いと考えている．
#### 5. おわりに

即興演奏を行うためには，様々な音楽知識と高度な

演奏技能が必要である．我々は，打鍵タイミングや音の

強弱，音の高低，同時に入力する音数などのユーザの

大まかな演奏意図を保持し，スケールノートやコード

ノートへの置換処理によって，音楽理論に基づいた演

奏に実時間で変換する演奏システム INSPIRATION

の開発を進めてきた．これにより，音楽知識と演奏技

能を習得していない素人の演奏者でも，即興演奏によ

る様々な演奏表現を行うことが可能となった．

本稿では，アボイドノートとクロマティックノート

の扱いに関する 3 種類のインタフェースとその評価，

一般に流通している SMF 楽曲を対象とするための機

構を中心に述べた．通常の鍵盤楽器において，「音を

外す」演奏表現を行うためには，アボイドノートやク

ロマティックノートに関する知識と鍵盤上の配置の理

解が必要になり，初期の INSPIRATION では対応し

ていなかった．意図的に音を外すためのインタフェー

スの追加により，音の機能の配置を理解していなくて

も，視覚的な判断により音を外す演奏表現が可能とな

り，演奏表現の幅を広げることができた．また，演奏

変換するために必要な情報を書き込んだ PuriFi （ Purificatory File ）を SMF 楽曲データから自動作成する

機能の追加により，楽曲データ不足に対処する目処が

ついた．

楽曲制作やライブ演奏において INSPIRATION を

利用すれば，素人でも能動的に音楽へ参加することが

できる．また，即興演奏における演奏表現のトレーニ


-----

858 情報処理学会論文誌 Mar. 2005


ングシステムとしての利用形態も考えられる．今後は，

ギターやバイオリンなどの弦楽器への展開を予定して

いる．

謝辞 本研究の一部は，日本学術振興会未来開拓学

術研究推進事業（ JSPS-RFTF 99P01404 ），科学技術

振興機構さきがけ研究 21 「協調と制御」領域の支援

を受け実施されました． NTT コミュニケーション科

学基礎研究所の平田圭二氏には，熱心かつ有益なご討

論ならびにご協力をいただきました．ここに記して感

謝いたします．
#### 参 考 文 献

1) 安西祐一郎，草原真知子，片寄晴弘，笹田剛史，
中津良平，黒川隆夫：自己の表現， pp.67–113, 岩
波書店 (2000).
2) 谷井章夫，片寄晴弘：音楽知識と技能を補うピ
アノ演奏システム INSPIRATION ，情報処理学
会論文誌， Vol.43, No.2, pp.256–259 (2002) ．
3) 大島千佳，宮川洋平，西本一志： Coloring-in
Piano ：表情付けに専念できるピアノの提案，情
報処理学会研究報告， Vol.2001, No.42, pp.69–74
(2001) ．
4) 奥平啓太，片寄晴弘：指一本によるピアノ演奏
システム： sfp ，情報処理学会ヒューマンインター
フェース研究会報告， 2003-HI-102, No.10 (2003).
5) 西本一志，渡邊 洋，馬田一郎，間瀬健二，中津
良平：創造的音楽表現を可能とする音楽演奏支援

—
手法の検討 音機能固定マッピング楽器の提案，情
報処理学会論文誌， Vol.39, No.5, pp.1556–1567
(1998) ．
6) 西堀 佑，多田幸生，曽根卓朗：遅延のある演奏
系での遅延の認知に関する実験とその考察，情報
処理学会研究報告， Vol.2003, No.127, pp.37–42
(2003) ．
7) 柳川貴央，北原鉄朗，武田正之：即興演奏にお
ける演奏補正システム，情報処理学会第 64 回全
国大会， pp.2.9–2.10 (2002) ．
8) 谷井章夫，片寄晴弘：音楽知識と技能を補うピ
アノ演奏システム INSPIRATION ，インタラク


ティブシステムとソフトウェア IX ：日本ソフト
ウェア科学会 WISS2001 ， pp.199–200, 近代科学
社 (2001) ．
9) Chew, E.: The Spiral Array: An Algorithm
for Determining Key Boundaries, *Music and*
*Artificial Intelligence* ( *ICMAI 2002* ), pp.18–31
(2002) ．
10) Winograd, T.: Linguistics and the computer
analysis of tonal harmony, *Journal of Music*
*Theory*, Vol.12, No.1, pp.2–49 (1968) ．
11) http://ist.ksc.kwansei.ac.jp/˜katayose/
members/yatsui/inspiration001.html

( 平成 16 年 4 月 13 日受付 )

( 平成 17 年 1 月 7 日採録 )

谷井 章夫（学生会員）
1979 年生． 2003 年和歌山大学大

学院システム工学研究科修士課程修

了．現在，関西学院大学理学研究科

博士後期課程在学中． 2003 年より，

科学技術振興機構さきがけ研究 21

「協調と制御」領域片寄研究グループリサーチスタッ

フ．音楽情報処理，インタラクティブシステムの研究

に従事． 2003 年度情報科学技術フォーラム FIT2003

論文賞受賞．

片寄 晴弘（正会員）
1991 年大阪大学大学院基礎工学

研究科博士課程修了．工学博士．和

歌山大学システム工学部助教授，関

西学院大学助教授を経て，現在，同

教授． 2004 年度より，同大学文学研

究科心理学専攻兼任．音楽情報処理，感性情報処理，

HCI の研究に従事． 2002 年度人工知能学会ベストプ

レゼンテーション賞， 2003 年度 FIT 論文賞受賞．科

学技術振興機構さきがけ研究 21 「協調と制御」領域

研究者．


-----

